import { DefaultTextEditorSettings } from 'components/settings/data/default-settings'
import { Group, ConfigType } from '../types'
import { KeyBinding } from 'types/settings'

export const textEditorSettings: Group = {
  title: 'Text Editor',
  subGroupDict: {
    basic: {
      title: 'Basic',
      description: 'Customize basic editor settings.',
      configs: [
        {
          type: ConfigType.SELECT,
          title: 'Line Numbers',
          description: 'Control the rendering of line numbers.',
          default: DefaultTextEditorSettings.lineNumbers as string,
          options: [
            ['on', 'on'],
            ['off', 'off'],
            ['relative', 'relative'],
            ['interval', 'interval'],
          ],
          key: 'lineNumbers',
        },
        {
          type: ConfigType.SELECT,
          title: 'Word Wrap',
          description: 'Control the wrapping of the editor.',
          default: DefaultTextEditorSettings.wordwrap as string,
          options: [
            ['on', 'on'],
            ['off', 'off'],
            ['wordWrapColumn', 'wordWrapColumn'],
            ['bounded', 'bounded'],
          ],
          key: 'wordWrap',
        },
      ],
    },
    font: {
      title: 'Font',
      description: 'Customize font settings.',
      configs: [
        {
          type: ConfigType.INPUT,
          title: 'Font Family',
          description: 'Controls the font family.',
          default: DefaultTextEditorSettings.fontFamily as string,
          key: 'fontFamily',
        },
        {
          type: ConfigType.INPUT,
          title: 'Font Size',
          description: 'Controls the font size.',
          default: DefaultTextEditorSettings.fontSize as number,
          key: 'fontSize',
        },
        {
          type: ConfigType.INPUT,
          title: 'Line Height',
          description: 'Controls the line height.',
          default: DefaultTextEditorSettings.lineHeight as string,
          key: 'lineHeight',
        },
        {
          type: ConfigType.INPUT,
          title: 'Font Weight',
          description: 'Controls the font size.',
          default: DefaultTextEditorSettings.fontWeight as number,
          key: 'fontWeight',
        },
        {
          type: ConfigType.CHECKBOX,
          title: 'Font Ligature',
          description: 'Controls whether font ligature is used',
          default: DefaultTextEditorSettings.fontLigatures as boolean,
          key: 'fontLigatures',
        },
      ],
    },
    keybinding: {
      title: 'Key Bindings',
      description: 'Customize keybinding and keyboard shortcuts.',
      configs: [
        {
          type: ConfigType.SELECT,
          title: 'Custom Bindings',
          description: 'Controls the binding used by the editor',
          default: DefaultTextEditorSettings.keyBinding as string,
          options: [
            ['None', KeyBinding.NONE],
            ['Vim', KeyBinding.VIM],
            ['Emacs', KeyBinding.EMACS],
          ],
          key: 'keyBinding',
        },
      ],
    },
    theme: {
      title: 'Theme',
      description: 'Customize editor theme.',
      configs: [
        {
          type: ConfigType.SELECT,
          title: 'Theme',
          description: 'Controls the theme used by the editor',
          default: DefaultTextEditorSettings.theme as string,
          options: [
            ['Default', 'default'],
            ['Active4D', 'Active4D'],
            ['All Hallows Eve', 'All Hallows Eve'],
            ['Amy', 'Amy'],
            ['Birds of Paradise', 'Birds of Paradise'],
            ['Blackboard', 'Blackboard'],
            ['Brilliance Black', 'Brilliance Black'],
            ['Brilliance Dull', 'Brilliance Dull'],
            ['Chrome DevTools', 'Chrome DevTools'],
            ['Clouds Midnight', 'Clouds Midnight'],
            ['Clouds', 'Clouds'],
            ['Cobalt', 'Cobalt'],
            ['Dawn', 'Dawn'],
            ['Dominion Day', 'Dominion Day'],
            ['Dreamweaver', 'Dreamweaver'],
            ['Eiffel', 'Eiffel'],
            ['Espresso Libre', 'Espresso Libre'],
            ['GitHub', 'GitHub'],
            ['IDEL', 'IDEL'],
            ['idleFingers', 'idleFingers'],
            ['iPlastic', 'iPlastic'],
            ['Katzenmilch', 'Katzenmilch'],
            ['krTheme', 'krTheme'],
            ['Kuroir Theme', 'Kuroir Theme'],
            ['LAZY', 'LAZY'],
            ['MagicWB (Amiga)', 'MagicWB (Amiga)'],
            ['Merbivore Soft', 'Merbivore Soft'],
            ['Merbivore', 'Merbivore'],
            ['monoindustrial', 'monoindustrial'],
            ['Monokai Bright', 'Monokai Bright'],
            ['Monakai', 'Monokai'],
            ['Night Owl', 'Night Owl'],
            ['Oceanic Next', 'Oceanic Next'],
            ['Pastels on Dark', 'Pastels on Dark'],
            ['Slush and Poppies', 'Slush and Poppies'],
            ['Solarized-dark', 'Solarized-dark'],
            ['Solarized-light', 'Solarized-light'],
            ['SpaceCadet', 'SpaceCadet'],
            ['Sunburst', 'Sunburst'],
            ['Textmate (Mac Classic)', 'Textmate (Mac Classic)'],
            ['themelist', 'themelist'],
            ['Tomorrow-Night-Blue', 'Tomorrow-Night-Blue'],
            ['Tomorrow-Night-Bright', 'Tomorrow-Night-Bright'],
            ['Tomorrow-Night-Eight', 'Tomorrow-Night-Eight'],
            ['Tomorrow-Night', 'Tomorrow-Night'],
            ['Tomorrow', 'Tomorrow'],
            ['Twilight', 'Twilight'],
            ['Upstream Sunburst', 'Upstream Sunburst'],
            ['Vibrant Ink', 'Vibrant Ink'],
            ['Xcode_default', 'Xcode_default'],
            ['Zenburnesque', 'Zenburnesque'],
          ],
          key: 'theme',
        },
      ],
    },
    minimap: {
      title: 'Minimap',
      description: 'Customize minimap settings.',
      configs: [
        {
          type: ConfigType.CHECKBOX,
          title: 'Minimap',
          description: 'Controls whether font minimap is enabled',
          default: DefaultTextEditorSettings.minimapEnable as boolean,
          key: 'minimapEnable',
        },
        {
          type: ConfigType.INPUT,
          title: 'Max Column',
          description:
            'Limits the width of the minimap to render at most a certain number of columns.',
          default: DefaultTextEditorSettings.minimapMaxColumn as number,
          key: 'minimapMaxColumn',
        },
        {
          type: ConfigType.CHECKBOX,
          title: 'Render Characters',
          description:
            'Render the actual characters on a line as opposed to color blocks.',
          default: DefaultTextEditorSettings.minimapRenderCharacters as boolean,
          key: 'minimapRenderCharacters',
        },
        {
          type: ConfigType.SELECT,
          title: 'Scale',
          description: 'Scale of content drawn in the minimap.',
          default: DefaultTextEditorSettings.minimapScale as number,
          options: [
            ['1', 1],
            ['2', 2],
            ['3', 3],
          ],
          key: 'minimapScale',
        },
        {
          type: ConfigType.SELECT,
          title: 'Show Slider',
          description: 'Controls when the minimap slider is shown.',
          default: DefaultTextEditorSettings.minimapShowSlider as string,
          options: [
            ['always', 'always'],
            ['mouseover', 'mouseover'],
          ],
          key: 'minimapShowSlider',
        },
        {
          type: ConfigType.SELECT,
          title: 'Side',
          description: 'Controls the side where to render the minimap.',
          default: DefaultTextEditorSettings.minimapSide as string,
          options: [
            ['right', 'right'],
            ['left', 'left'],
          ],
          key: 'minimapSide',
        },
        {
          type: ConfigType.SELECT,
          title: 'Size',
          description: 'Controls the size of minimap.',
          default: DefaultTextEditorSettings.minimapSize as string,
          options: [
            ['proportional', 'proportional'],
            ['full', 'full'],
            ['fit', 'fit'],
          ],
          key: 'minimapSize',
        },
      ],
    },
    cursor: {
      title: 'Cursor',
      description: 'Customize cursor settings.',
      configs: [
        {
          type: ConfigType.SELECT,
          title: 'Cursor Blinking',
          description: 'Control the cursor animation style.',
          default: DefaultTextEditorSettings.cursorBlinking as string,
          options: [
            ['blink', 'blink'],
            ['smooth', 'smooth'],
            ['phase', 'phase'],
            ['expand', 'expand'],
            ['block-outline', 'solid'],
          ],
          key: 'cursorBlinking',
        },
        {
          type: ConfigType.CHECKBOX,
          title: 'Cursor Smooth Caret Animation',
          description:
            'Controls whether the smooth caret animation should be enabled.',
          default: DefaultTextEditorSettings.cursorSmoothCaretAnimation as boolean,
          key: 'cursorSmoothCaretAnimation',
        },
        {
          type: ConfigType.SELECT,
          title: 'Cursor Style',
          description: 'Control the cursor style.',
          default: DefaultTextEditorSettings.cursorStyle as string,
          options: [
            ['line', 'line'],
            ['block', 'block'],
            ['underline', 'underline'],
            ['line-thin', 'line-thin'],
            ['block-outline', 'block-outline'],
            ['underline-thin', 'underline-thin'],
          ],
          key: 'cursorStyle',
        },
        {
          type: ConfigType.INPUT,
          title: 'Cursor Surrounding Lines',
          description:
            'Controls the minimal number of visible leading and trailing lines surrounding the cursor.',
          default: DefaultTextEditorSettings.cursorSurroundingLines as number,
          key: 'cursorSurroundingLines',
        },
        {
          type: ConfigType.SELECT,
          title: 'Cursor Surrounding Lines Style',
          description:
            'Controls when Cursor Surrounding Lines should be enforced.',
          default: DefaultTextEditorSettings.cursorSurroundingLinesStyle as string,
          options: [
            ['default', 'default'],
            ['all', 'all'],
          ],
          key: 'cursorSurroundingLinesStyle',
        },
        {
          type: ConfigType.INPUT,
          title: 'Cursor Width',
          description:
            'Control the width of the cursor when cursorStyle is set to line.',
          default: DefaultTextEditorSettings.cursorWidth as number,
          key: 'cursorWidth',
        },
      ],
    },
  },
}
