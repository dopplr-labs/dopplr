version: '3.8'
services:
  # database
  postgres:
    image: 'postgres:alpine'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  # backend
  server:
    stdin_open: true
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - '3001:3001'
    volumes:
      - './server:/srv/server'
    environment:
      - PORT=3001
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_HOST=${DB_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PORT=${POSTGRES_PORT}
    depends_on:
      - postgres

  # backend prod
  server_prod:
    stdin_open: true
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    ports:
      - '3001:3001'
    volumes:
      - './server:/srv/server'
    environment:
      - PORT=3001
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_HOST=${DB_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PORT=${POSTGRES_PORT}
    depends_on:
      - postgres

  # frontend
  client:
    stdin_open: true
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - './client:/srv/client'
    environment:
      REACT_APP_API_BASE_URL: http://localhost:3001
      REACT_APP_LANGUAGE_SERVER_WS: ws://localhost:3001
    depends_on:
      - server

  # nginx as reverse proxy
  prod:
    stdin_open: true
    build:
      context: './nginx'
      dockerfile: 'Dockerfile'
    depends_on:
      - server_prod
